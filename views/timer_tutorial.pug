extends layout

block content

    .container

            .row
                .col.text-center.text-white.mt-3
                    .my-3.py-3
                        div.res.clock
            .row
                .col
                    h1.display-4.font-italic Coding in React
                    p.lead.my-3

            .row
                .col

                    .border.my-2

                    div.my-3.article

                        p In this tutorial, we will be going over how to create a digital pay timer.
                        p To see the finished product, check out the following page!
                        a.font-weight-bold(href = "https://maleriefleischman.com/timer" target="_blank")  https://maleriefleischman.com/timer

                        .border.my-2

                        h2 The Basics

                        p React is: A JavaScript Library
                        p React is: Open Source
                        p React is: A Way to Build Responsive UI on Static Pages

                        .border

                        h3.my-3 JSX & React Elements

                        p React is made up of building blocks called elements
                        p React elements are created by using JSX, an HTML-like syntax that allows you to put HTML in JavaScript

                        .code.rounded
                            .m-2
                                code
                                    <span> element = &lt;h1&gt;Hello, world!&lt;/h1&gt;


                        .border.my-2

                        h3.my-3 Rendering a React Element

                        p An empty div with a specified id "root" acts as the connection point between your static HTML page and your React code.
                        p This div is known as a "root" DOM node. Everything within this node will be managed by React DOM

                        .code.rounded
                            div.m-2
                                code
                                    <span>&lt;html&gt;</span>
                                    <span>  &lt;head&gt;&lt;/head&gt;</span>
                                    <span>  &lt;body&gt;</span>
                                    <span class="highlight">      &lt;div id="root"&gt;&lt;/div&gt;</span><span>  &lt;/body&gt;</span>
                                    <span>&lt;/html&gt;</span>

                        p To render the React element, pass the element and root DOM node to ReactDOM.render()

                        .code.rounded
                            div.m-2
                                code
                                    <span>ReactDOM.render( <span>
                                    <span>      element, </span>
                                    <span>      document.getElementById('root')</span>
                                    <span>);</span>


                        .border.my-2

                        h2.my-3 React Components

                        p React components are made up of elements. They operate like functions and can be defined using JavaScript functions or ES6 Classes
                        p The following components are defined differently but function the same way

                        .code.rounded
                            div.m-2
                                code
                                    <span>function App() { </span>
                                    <span>      return &lt;h1&gt;Hello, world!&lt;/h1&gt;
                                    <span>);</span>

                        .code.rounded
                            div.m-2
                                code
                                    <span>class App() extend React.Component { </span>
                                    <span>  render() { </span>
                                    <span>      return &lt;h1&gt;Hello, world!&lt;/h1&gt;
                                    <span>);</span>

                        p Components help to keep elements separate and reusable.

                        .border.my-2

                        h2.my-3 Building our Template




                        p First, let's figure out how we want our timer to look.

                        p We'll need an input section for our users to provide their wage, and we'll need a start and stop button.
                        p Next, we'll need a section to see the time elapsed, as well as the final wages earned at the end.


                        .row
                            .col
                                .code.rounded
                                    div.m-2
                                        code
                                            <span>&lt;div&gt;</span>
                                            <span>   &lt;input type="number" id="wage" placeholder="Hourly Wage" required /&gt </span>
                                            <span>   &lt;div&gt </span>
                                            <span>        &lt;button>Start!&lt;/button&gt</span>
                                            <span>        &lt;button>Stop!&lt;/button&gt</span>
                                            <span>   &lt;/div&gt</span>
                                            <span>   &lt;div&gt;{/* TIME */}&lt;/div&gt;  </span>
                                            <span>   &lt;div&gt;{/* WAGE */}&lt;/div&gt; </span>
                                            <span> &lt;/div&gt </span>

                        p As you can see, the template is pretty boring, it doesn't have any values, it isn't taking user input, and it never changes
                        p We can solve all 3 of these problems by adding something called 'State'

                        .border.my-2


                        h2 Determining and Changing State
                        p React uses JSX to render small, cheap, reusable elements.
                        p These elements are immutable. In other words, they do not change. Instead, the UI is updated by creating a new element.
                        p One of the ways to trigger the creation of a new element is by changing it's state
                        p Let's start by adding a state for the users Wage

                        .code.rounded
                            div.m-2
                                code
                                    <span> class Clock extends React.Component { </span>
                                    <span>   constructor(props) { </span>
                                    <span>       super(props); </span>
                                    <span>       this.state = { </span>
                                    <span class="highlight">            wage:0 </span><span>    }; </span>
                                    <span>}</span>

                        p Now that we have a 'wage' state, we can display it in the render() function

                        .code.rounded
                            div.m-2
                                code
                                    <span>&lt;div&gt;</span>
                                    <span>   &lt;input type="number" id="wage" placeholder="Hourly Wage" required /&gt </span>
                                    <span>   &lt;div&gt </span>
                                    <span>        &lt;button>Start!&lt;/button&gt</span>
                                    <span>        &lt;button>Stop!&lt;/button&gt</span>
                                    <span>   &lt;/div&gt</span>
                                    <span>   &lt;div&gt;{/* TIME */}&lt;/div&gt;  </span>
                                    <span class="highlight m-0">   &lt;div&gt;${this.state.wage}&lt;/div&gt; </span><span> &lt;/div&gt </span>

                        p Now we have rendered value that is determined by the Clock classes state
                        p Check out the update here:
                        a.font-weight-bold(href = "https://codepen.io/maleriefleischman/pen/oNjZybm" target="_blank")  https://codepen.io/maleriefleischman/pen/oNjZybm

                        .border.my-2

                        p This timer won't be very good if it can't show time!

                        p 1 create a new state called 'date'

                        .code.rounded
                            div.m-2
                                code
                                    <span> class Clock extends React.Component { </span>
                                    <span>   constructor(props) { </span>
                                    <span>       super(props); </span>
                                    <span>       this.state = { </span>
                                    <span>            wage:0, </span>
                                    <span class="highlight">            Date: new Date() </span> <span>    }; </span>
                                    <span>}</span>


                        p 2 Call the date state in the render function


                        .code.rounded
                            div.m-2
                                code
                                    <span>&lt;div&gt;</span>
                                    <span>   &lt;input type="number" id="wage" placeholder="Hourly Wage" required /&gt </span>
                                    <span>   &lt;div&gt </span>
                                    <span>        &lt;button>Start!&lt;/button&gt</span>
                                    <span>        &lt;button>Stop!&lt;/button&gt</span>
                                    <span>   &lt;/div&gt</span>
                                    <span class="highlight m-0">   &lt;div&gt;{this.state.date.toLocaleTimeString()}&lt;/div&gt;  </span> <span>  &lt;div&gt;${this.state.wage}&lt;/div&gt; </span>
                                    <span> &lt;/div&gt </span>

                        p Now we can see a timestamp for when the page was initially rendered.
                        p Next, we'll run a function that will update the date state every second

                        .border.my-2

                        p
